trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  TF_VERSION: '1.6.0'

stages:
# -------- STAGE 1: PLAN --------
- stage: TerraformPlan
  jobs:
  - job: plan
    displayName: 'Terraform Plan'
    steps:
    - task: TerraformInstaller@1
      inputs:
        terraformVersion: $(TF_VERSION)

    - task: AzureCLI@2
      inputs:
        azureSubscription: 'DataCouch (d52a6d4f-8a6b-4e23-a011-dbb0c8d7eddc)'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          terraform init
          terraform plan -out=tfplan

    - publish: tfplan
      artifact: terraformPlan

# -------- STAGE 2: APPLY (With Approval) --------
- stage: TerraformApply
  displayName: 'Terraform Apply with Manual Approval'
  dependsOn: TerraformPlan
  condition: succeeded()

  jobs:
  - deployment: apply
    displayName: 'Terraform Apply'
    environment: terraform-prod1  # ðŸ‘ˆ Must match the name of your environment

    strategy:
      runOnce:
        deploy:
          steps:
          - task: TerraformInstaller@1
            inputs:
              terraformVersion: $(TF_VERSION)

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: terraformPlan
              path: $(System.DefaultWorkingDirectory)

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'DataCouch (d52a6d4f-8a6b-4e23-a011-dbb0c8d7eddc)'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                terraform init
                terraform apply -auto-approve tfplan

